my_num <- 6
initials <- "?. ?."
my_vector <- c(my_num, initials)
# run ?sum to get more info
vector_sum <- sum(my_vector)
c?
# run ?sum to get more info
vector_sum <- sum(my_vector)
c?
# run ?sum to get more info
vector_sum <- sum(my_vector)
print(str_length(my_line))
install.packages("stringr")
my_line <- "Hey, hey, this is the library"
print(str_length(my_line))
my_num <- 6
initials <- "?. ?."
my_vector <- c(my_num, initials)
# run ?sum to get more info
vector_sum <- sum(my_vector)
print(str_length(my_line))
return TRUE
return (length1 >= length2 * 2) | (length2 >= 2 * length1)
is_twice_as_long <- function(String1, String2){
length1 <- nchar(String1)
length2 <- nchar(String2)
return (length1 >= length2 * 2) | (length2 >= 2 * length1)
}
# Call your `is_twice_as_long` function by passing it different length strings
# to confirm that it works. Make sure to check when _either_ argument is twice
# as long, as well as when neither are!
is_twice_as_long(arj, singhi)
is_twice_as_long <- function(String1, String2){
length1 <- nchar(String1)
length2 <- nchar(String2)
return (length1 >= length2 * 2) | (length2 >= 2 * length1)
}
# Call your `is_twice_as_long` function by passing it different length strings
# to confirm that it works. Make sure to check when _either_ argument is twice
# as long, as well as when neither are!
is_twice_as_long("arj", "singhi")
is_twice_as_long <- function(String1, String2){
length1 <- nchar(String1)
length2 <- nchar(String2)
return (length1 >= length2 * 2) | (length2 >= length1 * 2)
}
s_twice_as_long <- function(String1, String2){
length1 <- nchar(String1)
length2 <- nchar(String2)
return (length1 >= length2 * 2) | (length2 >= length1 * 2)
}
# Call your `is_twice_as_long` function by passing it different length strings
# to confirm that it works. Make sure to check when _either_ argument is twice
# as long, as well as when neither are!
is_twice_as_long("arj", "singhi")
is_twice_as_long <- function(String1, String2){
length1 <- nchar(String1)
length2 <- nchar(String2)
return (length1 >= length2 * 2) | (length2 >= length1 * 2)
}
# Call your `is_twice_as_long` function by passing it different length strings
# to confirm that it works. Make sure to check when _either_ argument is twice
# as long, as well as when neither are!
is_twice_as_long("arj", "singh")
is_twice_as_long <- function(String1, String2){
length1 <- nchar(String1)
length2 <- nchar(String2)
return (length1 >= length2 * 2) | (length2 >= length1 * 2)
}
# Call your `is_twice_as_long` function by passing it different length strings
# to confirm that it works. Make sure to check when _either_ argument is twice
# as long, as well as when neither are!
is_twice_as_long("arj", "sin")
# Call your `is_twice_as_long` function by passing it different length strings
# to confirm that it works. Make sure to check when _either_ argument is twice
# as long, as well as when neither are!
is_twice_as_long("arj", "singhii")
# Make a vector and use typeof to check what type R considers it to be
test <- c("arjun", "UW")
typeof(test)
paste("The difference in lengths is", length(vector2) - length(vector1))
CompareLength <- function(vector1, vector2){
paste("The difference in lengths is", length(vector2) - length(vector1))
}
# Pass two vectors of different length to your `CompareLength` function
CompareLength(test, c("Hey"))
# Pass two vectors of different length to your `CompareLength` function
CompareLength(test, c("Hey", "Info", "CSE"))
